import { inferAction } from "./symbolic_definition_mapper.js";
const actionMap = {
  alchemical: "transmute_mind",
  glossology: "analyze_language_structure",
  dreamgate: "open_cosmic_portal",
  aviates: "initiate_flight_sequence",
  deductional: "reason_forward_chain",
  lived: "reflect_past_events"
};

export function executeSymbol(symbol) {
  const action = actionMap[symbol];
  const ts = new Date().toISOString();
  if (action) {
  } else {
    const inferred = inferAction(symbol);
    const ts = new Date().toISOString();
    if (inferred) {
      console.log(`ðŸ§  [Auto-Mapped] ${symbol} â†’ ${inferred} @ ${ts}`);
      actionMap[symbol] = inferred;
      console.log(`âš¡ [EXEC] ${symbol} â†’ ${inferred} @ ${ts}`);
    } else {
      console.warn(`ðŸ¤” [Unknown] ${symbol} â€” no mapped action @ ${ts}`);
    }
  }
  } else {
    const inferred = inferAction(symbol);
    if (inferred) {
      console.log(`ðŸ§  [Auto-Mapped] ${symbol} â†’ ${inferred}`);
      actionMap[symbol] = inferred;
      console.log(`âš¡ [EXEC] ${symbol} â†’ ${inferred}`);
    } else {
      console.warn(`ðŸ¤” [Unknown] ${symbol} â€” no mapped action`);
    }
  }
    } else {
      const inferred = inferAction(symbol);
      if (inferred) {
        console.log(`ðŸ§  [Auto-Mapped] ${symbol} â†’ ${inferred}`);
        actionMap[symbol] = inferred;
        console.log(`âš¡ [EXEC] ${symbol} â†’ ${inferred}`);
      } else {
        console.warn(`ðŸ¤” [Unknown] ${symbol} â€” no mapped action`);
      }
  } else {
    console.warn(`ðŸ¤” [Unknown Symbol] ${symbol} â€” No mapped action @ ${ts}`);
  }
}

export function getDefinitions(symbol) {
  return actionMap[symbol] || null;
}

export { actionMap };
